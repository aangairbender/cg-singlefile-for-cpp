name: Build and Upload Release Asset
on:
  push:
    branches:
      - 'master'
jobs:
  build:
    name: Build ${{ matrix.os.name }}
    strategy:
      matrix:
        os:
          - name: Ubuntu
            runner: ubuntu-latest
          - name: Windows
            runner: windows-latest
          - name: macOS
            runner: macos-latest
    runs-on: ${{ matrix.os.runner }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results
        path: TestResults
      if: ${{ always() }}
  
  publish:
    name: Publish
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        runtime:
          - win-x64
          - win-x86
          - linux-x64
          - osx-x64
        self-contained: ['true', 'false']
    runs-on: ubuntu-latest
    env:
      release-name: cg-singlefile-for-cpp-${{ github.ref_name }}-${{ matrix.runtime }}${{ contains(matrix.self-contained, 'true') && '-self-contained' || '' }}
    steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
    - name: Publish
      run: >-
        dotnet publish cg-singlefile-for-cpp/cg-singlefile-for-cpp.csproj
        -c Release -r ${{ matrix.runtime }}
        /p:PublishSelfContained=${{ matrix.self-contained }},PublishTrimmed=${{ matrix.self-contained }}
        -o bin
    - name: Zip bin folder
      run: |
        cd bin
        zip -r ${{ env.release-name }}.zip *
        cd ..
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.release-name }}.zip